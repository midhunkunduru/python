toost

{
  "version": "2.0",
  "extensionBundle": {
    "id": "Microsoft.Azure.Functions.ExtensionBundle",
    "version": "[4.*, 5.0.0)"
  },
  "logging": {
    "applicationInsights": {
      "samplingSettings": { "isEnabled": true }
    }
  }
}

film
{
  "scriptFile": "__init__.py",
  "bindings": [
    {
      "name": "timer",
      "type": "timerTrigger",
      "direction": "in",
      "schedule": "0 15 1 * * *"
    }
  ]
}


integer
import logging
import azure.functions as func

from jira_splunk_etl.settings import AzureSQLConfig, SplunkConfig
from jira_splunk_etl.etl import JiraSplunkETL

def main(timer: func.TimerRequest) -> None:
    logging.info("TimerJiraEtl triggered")
    etl = JiraSplunkETL(SplunkConfig(), AzureSQLConfig())
    stats = etl.run()
    logging.info(f"ETL completed: {stats}")


ser

from dataclasses import dataclass
import os

@dataclass
class AzureSQLConfig:
    server: str = os.getenv("AZSQL_SERVER")
    database: str = os.getenv("AZSQL_DATABASE")
    username: str = os.getenv("AZSQL_USERNAME")
    password: str = os.getenv("AZSQL_PASSWORD")
    driver: str = os.getenv("AZSQL_DRIVER", "{ODBC Driver 17 for SQL Server}")
    encrypt: str = os.getenv("AZSQL_ENCRYPT", "yes")
    trust: str = os.getenv("AZSQL_TRUST", "no")

@dataclass
class SplunkConfig:
    host: str = os.getenv("SPLUNK_HOST")
    port: int = int(os.getenv("SPLUNK_PORT", "8089"))
    scheme: str = os.getenv("SPLUNK_SCHEME", "https")
    username: str = os.getenv("SPLUNK_USERNAME")
    password: str = os.getenv("SPLUNK_PASSWORD")
    query: str = os.getenv(
        "SPLUNK_QUERY",
        'search index="test_developer_dev" TriggerBy="SprintChanged"'
    )
    earliest_time: str = os.getenv("SPLUNK_EARLIEST", "-24h")
    latest_time: str = os.getenv("SPLUNK_LATEST", "now")


sour

from typing import List, Dict, Any
from splunklib import client, results
from .settings import SplunkConfig

class SplunkSource:
    def __init__(self, cfg: SplunkConfig | None = None):
        self.cfg = cfg or SplunkConfig()
        self.service = None

    def connect(self):
        if self.service:
            return self.service
        self.service = client.connect(
            host=self.cfg.host,
            port=self.cfg.port,
            scheme=self.cfg.scheme,
            username=self.cfg.username,
            password=self.cfg.password
        )
        return self.service

    def read_jira_sprint_events(self, query: str | None = None) -> List[Dict[str, Any]]:
        svc = self.connect()
        q = query or self.cfg.query
        job = svc.jobs.create(
            q, exec_mode="blocking",
            earliest_time=self.cfg.earliest_time,
            latest_time=self.cfg.latest_time
        )
        resp = job.results(output_mode="json", count=0)
        reader = results.JSONResultsReader(resp)
        rows: List[Dict[str, Any]] = []
        for item in reader:
            if isinstance(item, dict):
                rows.append(item)
        return rows


requests

azure-functions
splunk-sdk==2.0.2
pyodbc>=5
# If you prefer Key Vault references (no SDK needed), you can stop here.
# If you want programmatic fetch instead of Key Vault references, add:
# azure-identity
# azure-keyvault-secrets


cl

# Vars
RG=rg-mytestapp
LOC=centralus
STG=stmytestapp$RANDOM       # must be globally unique
PLAN=plan-mytestapp          # Windows plan
APP=mytestapp
KV=kv-mytestapp-$RANDOM

# Create group & storage
az group create -n $RG -l $LOC
az storage account create -g $RG -n $STG -l $LOC --sku Standard_LRS

# Windows Function App (Python 3.10)
az functionapp plan create -g $RG -n $PLAN --location $LOC --sku Y1 --is-linux false
az functionapp create -g $RG -n $APP \
  --storage-account $STG \
  --plan $PLAN \
  --runtime python \
  --runtime-version 3.10 \
  --os-type Windows

# Enable system-assigned managed identity
az functionapp identity assign -g $RG -n $APP

# Create Key Vault
az keyvault create -g $RG -n $KV -l $LOC

# Grant Function App identity access to Key Vault (RBAC)
PRINCIPAL_ID=$(az functionapp identity show -g $RG -n $APP --query principalId -o tsv)
az role assignment create \
  --assignee-object-id $PRINCIPAL_ID \
  --assignee-principal-type ServicePrincipal \
  --role "Key Vault Secrets User" \
  --scope $(az keyvault show -g $RG -n $KV --query id -o tsv)

# Add secrets (example values)
az keyvault secret set --vault-name $KV --name AZSQL-SERVER    --value "your-sql-server.database.windows.net"
az keyvault secret set --vault-name $KV --name AZSQL-DATABASE  --value "your_db"
az keyvault secret set --vault-name $KV --name AZSQL-USERNAME  --value "your_user"
az keyvault secret set --vault-name $KV --name AZSQL-PASSWORD  --value "your_password"
az keyvault secret set --vault-name $KV --name SPLUNK-HOST     --value "hello.splunkcloud.com"
az keyvault secret set --vault-name $KV --name SPLUNK-PORT     --value "8089"
az keyvault secret set --vault-name $KV --name SPLUNK-USERNAME --value "hello"
az keyvault secret set --vault-name $KV --name SPLUNK-PASSWORD --value "hellotest@123"
az keyvault secret set --vault-name $KV --name SPLUNK-QUERY    --value 'search index="test_developer_dev" TriggerBy="SprintChanged"'



@Microsoft.KeyVault(SecretUri=https://<your-kv-name>.vault.azure.net/secrets/<secret-name>/<optional-version>)

KV_URI=$(az keyvault show -g $RG -n $KV --query properties.vaultUri -o tsv)

az functionapp config appsettings set -g $RG -n $APP --settings \
  AZSQL_SERVER="@Microsoft.KeyVault(SecretUri=${KV_URI}secrets/AZSQL-SERVER)" \
  AZSQL_DATABASE="@Microsoft.KeyVault(SecretUri=${KV_URI}secrets/AZSQL-DATABASE)" \
  AZSQL_USERNAME="@Microsoft.KeyVault(SecretUri=${KV_URI}secrets/AZSQL-USERNAME)" \
  AZSQL_PASSWORD="@Microsoft.KeyVault(SecretUri=${KV_URI}secrets/AZSQL-PASSWORD)" \
  SPLUNK_HOST="@Microsoft.KeyVault(SecretUri=${KV_URI}secrets/SPLUNK-HOST)" \
  SPLUNK_PORT="@Microsoft.KeyVault(SecretUri=${KV_URI}secrets/SPLUNK-PORT)" \
  SPLUNK_USERNAME="@Microsoft.KeyVault(SecretUri=${KV_URI}secrets/SPLUNK-USERNAME)" \
  SPLUNK_PASSWORD="@Microsoft.KeyVault(SecretUri=${KV_URI}secrets/SPLUNK-PASSWORD)" \
  SPLUNK_QUERY='@Microsoft.KeyVault(SecretUri='${KV_URI}'secrets/SPLUNK-QUERY)' \
  AZSQL_DRIVER="{ODBC Driver 17 for SQL Server}" \
  AZSQL_ENCRYPT="yes" \
  AZSQL_TRUST="no" \
  WEBSITE_TIME_ZONE="Central Standard Time"






